name: CI/CD Pipeline to aws EC2 via SSH

on:

  push:
    branches: [ main ]
  pull_request: [ main ]
    branches: [ main ]


env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Run tests
      env:
        DATABASE_URL: postgres://test_user:test_pass@localhost:5432/test_db
      run: |
        poetry run python manage.py test

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
    - uses: actions/checkout@v3

    - name: Deploy to EC2 Server via SSH
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ env.EC2_SSH_KEY }}
        script: |
          cd /app
          git pull originn main
          docker-compose down || true
          docker-compose up -d --build
